{"version":3,"sources":["routes/login/login-helper.js","routes/login/login.js","routes/navbar/applicant-data-modal/applicant-data-modal.js","routes/navbar/navbar.js","routes/selection/resume-modal/resume-modal.js","routes/selection/applicant-info.js","routes/selection/selection-helper.js","routes/selection/scoring-board/scoring-board.jsx","routes/selection/selection.js","routes/search/search-helper.js","routes/search/search.js","serviceWorker.js","index.js","credentials.js","../node_modules/pdfjs-dist/build sync"],"names":["serverEndpoint","serverCredentials","endpoint","loginAdmin","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","adminKey","response","wrap","_context","prev","next","axios","post","withCredentials","sent","status","abrupt","objectSpread","authorized","data","t0","stop","_x","apply","this","arguments","logoutAdmin","_ref2","_callee2","_context2","delete","LoginPage","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","loggedIn","handleLogin","bind","assertThisInitialized","loginKey","loginInputObj","value","adminData","message","success","concat","firstName","setState","error","react_default","createElement","react_router","to","_this2","className","redirectOnLogin","id","input","size","placeholder","ref","inputObj","es_button","onClick","React","Component","Navbar","powerOff","reauthenticate","Cookie","remove","redirectIfPowerOff","icon","type","style","fontSize","href","marginRight","pdfjs","GlobalWorkerOptions","workerSrc","version","ResumeModalLink","onDocumentLoadSuccess","numPages","visible","pageNumber","fileObj","url","resumeUrl","showModal","closeModal","prevPage","nextPage","e","preventDefault","_this$state","modal","title","applicantFirstName","onCancel","footer","width","entry","file","margin","loading","onLoadSuccess","marginLeft","display","getTrackInfo","info","badge","text","getApplicantDisplayID","_id","substring","length","toUpperCase","ApplicantInfo","fields","applicantInfo","selectedFields","JSON","parse","localStorage","getItem","handleFieldsChange","resumeLink","links","infoMap","Track","track","University","university","Classification","classification","Major","major","Links","undefined","map","link","rel","target","key","Resume","resume_modal_resume_modal","DS Experience","experience","Expectation","expectation","keys","includes","descriptions","Item","label","badgeStatus","badgeText","getReviewStatusBadge","reviewed","bordered","applicationInfoForLayout","setItem","stringify","_this3","filteredOptions","filter","item","es_select","mode","defaultValue","onChange","field","Option","applicantInfoBox","fieldSelectionBox","getRequest","path","get","Access-Control-Allow-Origin","_x2","patchRequest","patch","_x3","_x4","getRandomApplicant","_ref3","_callee3","_context3","setApplicantScores","_ref5","_callee5","newScores","applicantEmail","_context5","_x7","_x8","getNumReviews","_ref7","_callee7","_context7","CODING_EXPERIENCE_TIP","DS_EXPERIENCE_TIP","CULTURE_FIT_TIP","IS_STEM_TIP","DEFAULT_APPLICANT_SCORES","coding_exp","ds_exp","culture_fit","is_stem","ScoringBoard","scores","newProps","scoreType","score","tooltip","index_es","faQuestionCircle","rate","changeApplicantScore","allowClear","count","SelectionPage","applicantData","location","applicantScores","totalReviewed","totalAssigned","getApplicantInfo","submitScores","getFullReviewedStats","scoringBoard","createRef","getReviewedStatistics","then","applicantResponse","applicant","empty","selection_applicant_info","spin","curReviewerStats","reviewStats","_this4","current","email","warning","_this5","reviews","reviewer","push","values","reduce","total","review","navbar_navbar","showApplicantInfo","scoring_board_scoring_board","backgroundColor","faArrowRight","getApplicantData","encodeURIComponent","Search","Input","SearchPage","searchResults","clickedApplicant","searchClick","query","params","searchResponse","pathname","list","itemLayout","dataSource","renderItem","redirectToApplicantSelection","Meta","lastName","description","applicationStatus","Pending","Accepted","Rejected","Waitlisted","enterButton","onSearch","authorizedCheck","searchBar","displaySearchResults","redirectToApplicant","Boolean","window","hostname","match","routing","react_router_dom","exact","component","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","webpackEmptyContext","req","Error","code","resolve"],"mappings":"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","file":"static/js/main.d2b95159.chunk.js","sourcesContent":["import axios from 'axios';\nimport { serverCredentials } from '../../credentials';\n\nconst serverEndpoint = serverCredentials.endpoint;\n\nexport const loginAdmin = async (adminKey) => {\n    try {\n        const response = await axios.post(serverEndpoint+'/admins', {\n            adminKey: adminKey,\n        }, {\n            withCredentials: true,\n        });\n        if (response.status === 200) {\n            return {\n                authorized: true,\n                ...response.data\n            };\n        }\n    } catch (err) {\n        return { authorized: false };\n    }\n    return { authorized: false };\n}\n\nexport const logoutAdmin = async () => {\n    await axios.delete(serverEndpoint+'/admins');\n};","import React from 'react';\nimport { Input, Button, message } from 'antd';\nimport { loginAdmin } from './login-helper.js';\nimport { Redirect } from 'react-router-dom';\n\nimport './login.css';\n\nclass LoginPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loggedIn: false,\n        };\n\n        this.handleLogin = this.handleLogin.bind(this);\n    }\n\n    async handleLogin() {\n        const loginKey = this.loginInputObj.state.value;\n        const adminData = await loginAdmin(loginKey);\n        if (adminData.authorized) {\n            message.success(`Hey ${adminData.firstName}, welcome to Voyager.`, 2)\n            this.setState({\n                loggedIn: true,\n            });\n        } else {\n            message.error(\"The credentials you provided are incorrect.\", 2)\n        }\n    }\n\n    redirectOnLogin() {\n        if (this.state.loggedIn) {\n            return <Redirect to='selection'/>\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"container-fluid\">\n                {this.redirectOnLogin()}\n                <h1 id=\"mainLogo\" className=\"text-center\">Voyager</h1>\n                <div className=\"row justify-content-around\">\n                    <div className=\"\" id=\"loginForm\">\n                        <Input size=\"large\" placeholder=\"Enter your key\" id=\"loginInput\" \n                            ref={(inputObj) => this.loginInputObj = inputObj}/>\n                        <Button id=\"loginBtn\" onClick={this.handleLogin}>Login</Button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default LoginPage;","import React from 'react';\nimport { Modal, Icon, Button, Select, message } from 'antd';\nimport axios from 'axios';\nimport { serverCredentials } from '../../../credentials';\nimport { saveAs } from 'file-saver';\n\nimport './applicant-data-modal.css';\nconst serverEndpoint = serverCredentials.endpoint;\n\nconst toCamelCase = (value) => \n    value.toLowerCase().replace(/\\s+(.)/g, function(match, group1) {\n        return group1.toUpperCase();\n    });\n\nclass ApplicantDataModal extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.options = ['First Name', 'Last Name', 'Email', 'Gender', 'University', 'Classification', 'Major', 'First Gen Student', 'Ethnicity', 'Track', 'Experience', 'Expectation', 'Is In Team', 'Resume Link', 'Application Status'];\n\n        this.state = {\n            visible: false,\n            selectedOptions: this.options,\n        }\n\n        this.showModal = this.showModal.bind(this);\n        this.closeModal = this.closeModal.bind(this);\n        this.handleOptionsChange = this.handleOptionsChange.bind(this);\n        this.downloadData = this.downloadData.bind(this);\n    }\n\n    closeModal() {\n        this.setState({\n            visible: false,\n        });\n    }\n\n    showModal() {\n        this.setState({\n            visible: true,\n        });\n    }\n\n    handleOptionsChange(selectedOptions) {\n        this.setState({\n            ...this.state,\n            selectedOptions,\n        })\n    }\n\n    async downloadData() {\n        try {\n            message.warning('The request for download has been sent. It\\'ll take a minute though. I would recommend closing this modal and reviewing more applicants.', 5)\n            const fieldsToDownload = this.state.selectedOptions.map(item => encodeURIComponent(toCamelCase(item)));\n            const csvResponse = await axios.get(serverEndpoint+'/applicants/csv', {\n                params: { fields: fieldsToDownload },\n                withCredentials: true,\n                responseType: 'blob',\n            });\n            if (csvResponse.data) {\n                saveAs(csvResponse.data, 'TAMU Datathon Applicants.csv');\n            }\n        } catch (err) {\n            if (err.response && err.response.status === 401) {\n                this.props.reauthenticate();\n            }\n\n        }\n    }\n\n    render() {\n        const filteredOptions = this.options.filter(item => !this.state.selectedOptions.includes(item));\n        return (\n            <span>\n                <span id='applicant-data-modal'\n                    onClick={this.showModal}\n                >\n                    <Icon type=\"download\" className=\"navbar-icon\" style={{\n                        fontSize: '20px',\n                        marginRight: '10px',\n                    }}/>\n                </span>\n                <Modal\n                    visible={this.state.visible}\n                    title=\"Download Applicant Data\"\n                    onCancel={this.closeModal}\n                    footer={null}\n                    width='42vw'\n                >\n                    <div className='container-fluid modal-data-div'>\n                        <h6 id='field-choose-text'>Please choose the fields to download:</h6>\n                        <Select\n                            mode=\"multiple\"\n                            size=\"default\"\n                            placeholder=\"Please select fields to download\"\n                            defaultValue={this.state.selectedOptions}\n                            style={{ width: '100%' }}\n                            onChange={this.handleOptionsChange}\n                        >\n                            {filteredOptions.map(field => <Select.Option key={field}>{field}</Select.Option>)}\n                        </Select>\n                        <span id='download-data-btn-span'>\n                            <Button id='download-data-btn' \n                                onClick={this.downloadData}\n                                type='primary'\n                            >\n                                Download\n                            </Button>\n                        </span>\n                    </div>\n                </Modal>\n            </span>\n        );\n    }\n}\n\nexport default ApplicantDataModal;","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Icon, message } from 'antd';\nimport Cookie from 'js-cookie';\nimport ApplicantDataModal from './applicant-data-modal/applicant-data-modal'\nimport { logoutAdmin } from '../login/login-helper';\n\nimport './navbar.css';\n\nclass Navbar extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            powerOff: false,\n        }\n\n        this.powerOff = this.powerOff.bind(this);\n        this.reauthenticate = this.reauthenticate.bind(this);\n    }\n\n    async powerOff() {\n        message.success(`Logging out!`, 2);\n        logoutAdmin();\n        Cookie.remove('voyagerToken');\n        this.setState({\n            powerOff: true,\n        })\n    }\n\n    redirectIfPowerOff() {\n        if (this.state.powerOff) return <Redirect to='/'/>\n    }\n\n    reauthenticate() {\n        message.error('Your access token expired. Please log in again.', 1.5);\n        this.setState({\n            powerOff: true\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"container-fluid\">\n                {this.redirectIfPowerOff()}\n                <div className=\"navbar-poweroff\">\n                    <Icon type=\"export\" className=\"navbar-icon\" onClick={this.powerOff} style={{\n                        fontSize: '20px',\n                    }}/>\n                </div>\n                <div className=\"w-30\" id=\"brand-div\">\n                    <p className=\"brand text-center\">Voyager</p>\n                </div>\n                <div className=\"navbar-links\">\n                    <a href=\"/selection\">\n                        <Icon type=\"solution\" className=\"navbar-icon\" style={{\n                            fontSize: '20px',\n                            marginRight: '10px',\n                        }}/>\n                    </a>\n                    {/*\n                    <ApplicantDataModal reauthenticate={this.reauthenticate}/>\n                    <a href=\"/search\">\n                        <Icon type=\"search\" className=\"navbar-icon\" style={{\n                            fontSize: '20px',\n                        }}/>\n                    </a>\n                    */}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Navbar;","import React from 'react';\nimport { Document, Page, pdfjs } from 'react-pdf';\nimport { Modal, Icon } from 'antd';\n\nimport './resume-modal.css';\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\nclass ResumeModalLink extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            visible: false,\n            numPages: null,\n            pageNumber: 1,\n            fileObj: {\n                url: this.props.resumeUrl\n            }\n        }\n\n        this.showModal = this.showModal.bind(this);\n        this.closeModal = this.closeModal.bind(this);\n        this.onDocumentLoadSuccess = this.onDocumentLoadSuccess.bind(this);\n        this.prevPage = this.prevPage.bind(this);\n        this.nextPage = this.nextPage.bind(this);\n    }\n\n    closeModal() {\n        this.setState({\n            visible: false,\n        });\n    }\n \n    onDocumentLoadSuccess = ({ numPages }) => {\n        this.setState({numPages})\n    }\n\n    showModal(e) {\n        e.preventDefault();\n        this.setState({\n            visible: true,\n        });\n    }\n\n    nextPage() {\n        let pageNumber = this.state.pageNumber % this.state.numPages + 1;\n        pageNumber = (pageNumber > 0) ? pageNumber : 1;\n        this.setState({pageNumber});\n    }\n\n    prevPage() {\n        let pageNumber = (this.state.pageNumber - 1) % this.state.numPages;\n        pageNumber = (pageNumber > 0) ? pageNumber : 1;\n        this.setState({pageNumber});\n    }\n    \n    render() {\n        const { numPages, pageNumber } = this.state;\n        return (\n            <span>\n                <a href={this.props.resumeUrl} onClick={this.showModal}>Here</a>\n                <Modal\n                    visible={this.state.visible}\n                    title={`${this.props.applicantFirstName}'s Resume`}\n                    onCancel={this.closeModal}\n                    footer={null}\n                    width='650px'\n                >\n                    <Document\n                        file= {this.state.fileObj}\n                        style = {{\n                            margin: 'auto',\n                        }}\n                        error={\n                            <p>\n                                Seems like the resume isn't a pdf. Please download it <a href={this.props.resumeUrl}>here</a>.\n                            </p>\n                        }\n                        loading='Loading resume...'\n                        onLoadSuccess={this.onDocumentLoadSuccess}\n                    >\n                        <Page pageNumber={this.state.pageNumber} width={600}/>\n                    </Document>\n                    <div \n                        style={{\n                            marginLeft: '270px',\n                            display: (numPages != null) ? 'inline-block' : 'none'\n                        }}\n                    >\n                    <p>\n                        Page {pageNumber || (numPages ? 1 : '--')} of {numPages || '--'}\n                    </p>\n                    <Icon \n                        type=\"left\" \n                        onClick={this.prevPage}\n                        className='pageBtn'\n                    />\n                    <Icon \n                        type=\"right\" \n                        onClick={this.nextPage}\n                        className='pageBtn'\n                        style={{\n                            marginLeft: '45px'\n                        }}\n                    />\n                    </div>\n                </Modal>\n            </span>\n        );\n    }\n}\n\nexport default ResumeModalLink;","import React from 'react';\nimport { Descriptions, Badge, Select } from 'antd';\nimport ResumeModalLink from './resume-modal/resume-modal';\n\nimport './applicant-info.css';\n\nconst DISPLAY_ID_SIZE = 6;\n\nconst getLinksOrNone = (links) => {\n    if (links === undefined || links.length === 0) {\n        return <Badge status=\"warning\" text=\"No Data\" />;\n    } else {\n        return links.map((link) => <a\n            href={link} rel=\"noopener noreferrer\" target=\"_blank\"\n            style={{ display: 'block' }} key={link}\n        >{link}</a>);\n    }\n}\n\nconst getBooleanInfoOrNone = (info) => {\n    if (info === \"TRUE\" || info === \"Yes\") {\n        return <Badge status=\"success\" text=\"Yes\" />\n    } else if (info === \"FALSE\" || info === \"No\") {\n        return <Badge status=\"error\" text=\"No\" />\n    } else {\n        return <Badge status=\"warning\" text=\"No Data\" />\n    }\n}\n\nconst getTrackInfo = (info) => {\n    if (info === \"Learner\") {\n        return <Badge status=\"orange\" text=\"Learner\" />\n    } else {\n        return <Badge status=\"geekblue\" text=\"Competitor\" />\n    }\n}\n\nconst getReviewStatusBadge = (status) => {\n    const badgeStatus = (status) ? \"success\" : \"warning\";\n    const badgeText = (status) ? \"Reviewed\" : \"Review Pending\";\n    return <Badge id=\"application-status-badge\" status={badgeStatus} text={badgeText} />;\n}\n\nconst getResumeOrNone = (resumeLink, firstName) => {\n    if (resumeLink === \"\") {\n        return <Badge status=\"warning\" text=\"No Data\" />\n    } else {\n        return <ResumeModalLink resumeUrl={resumeLink} applicantFirstName={firstName} />\n    }\n}\n\nconst getApplicantDisplayID = (info) => {\n    return '#' + info._id.substring(info._id.length - DISPLAY_ID_SIZE).toUpperCase();\n}\n\nclass ApplicantInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.fields = ['Track', 'University', 'Classification', 'Major', 'Links', 'Resume', 'DS Experience', 'Expectation'];\n        this.state = {\n            applicantInfo: props.applicantInfo,\n            selectedFields: JSON.parse(localStorage.getItem('voyagerSelectedFields')) || this.fields,\n        }\n\n        this.handleFieldsChange = this.handleFieldsChange.bind(this);\n    }\n\n    componentWillReceiveProps(props) {\n        this.setState({\n            ...this.state,\n            applicantInfo: props.applicantInfo,\n        })\n    }\n\n    applicationInfoForLayout(info) {\n        const infoMap = {\n            Track: getTrackInfo(info.track),\n            University: info.university,\n            Classification: info.classification,\n            Major: info.major,\n            'Links': getLinksOrNone(info.links),\n            Resume: getResumeOrNone(info.resumeLink, getApplicantDisplayID(info)),\n            'DS Experience': info.experience,\n            Expectation: info.expectation,\n        };\n        return Object.keys(infoMap).map(key => {\n            if (this.state.selectedFields.includes(key)) {\n                return <Descriptions.Item label={key} key={key}>{infoMap[key]}</Descriptions.Item>\n            }\n        });\n    }\n\n    applicantInfoBox(info) {\n        return (\n            <div id=\"applicant-info-div\" className=\"col-9\">\n                <div id=\"applicant-info-header\">\n                    <h1 className=\"application-name\">{getApplicantDisplayID(info)}</h1>\n                    {getReviewStatusBadge(info.reviewed)}\n                </div>\n                <Descriptions bordered>\n                    {this.applicationInfoForLayout(info)}\n                </Descriptions>\n            </div>\n        );\n    }\n\n    handleFieldsChange(selectedFields) {\n        localStorage.setItem('voyagerSelectedFields', JSON.stringify(selectedFields));\n        this.setState({\n            ...this.state,\n            selectedFields,\n        })\n    }\n\n    fieldSelectionBox() {\n        const filteredOptions = this.fields.filter(item => !this.state.selectedFields.includes(item));\n        return (\n            <div id='field-selection' className=\"col-2 justify-content-center\">\n                <h4 className='text-center mb-4'>Fields Shown</h4>\n                <div>\n                    <Select\n                        mode=\"multiple\"\n                        size=\"default\"\n                        placeholder=\"Please select fields to show\"\n                        defaultValue={this.state.selectedFields}\n                        style={{ width: '100%' }}\n                        onChange={this.handleFieldsChange}\n                    >\n                        {filteredOptions.map(field => <Select.Option key={field}>{field}</Select.Option>)}\n                    </Select>\n                </div>\n            </div>\n        );\n    }\n\n    render() {\n        const info = this.state.applicantInfo;\n        return (\n            <div id=\"applicant-info\" className=\"row\">\n                {this.applicantInfoBox(info)}\n                {this.fieldSelectionBox()}\n            </div>\n        );\n    }\n}\n\nexport default ApplicantInfo;","import axios from 'axios';\nimport { serverCredentials } from '../../credentials';\n\nconst serverEndpoint = serverCredentials.endpoint;\n\nconst getRequest = async (path, data) => {\n    try {\n        if (data === undefined) {\n            return await axios.get(serverEndpoint+path, {\n                'Access-Control-Allow-Origin': '*',\n                withCredentials: true});\n        }\n        return await axios.get(serverEndpoint+path, data, {\n            'Access-Control-Allow-Origin': '*',\n            withCredentials: true});\n    } catch (err) {\n        return err.response;\n    }\n}\n\nconst patchRequest = async (path, data) => {\n    try {\n        if (data === undefined) {\n            return await axios.patch(serverEndpoint+path, {\n                'Access-Control-Allow-Origin': '*',\n                withCredentials: true});\n        }\n        return await axios.patch(serverEndpoint+path, data, {\n            'Access-Control-Allow-Origin': '*',\n            withCredentials: true});\n    } catch (err) {\n        return err.response;\n    }\n}\n\nexport const getRandomApplicant = async () => {\n    return await getRequest('/applicants/random');\n}\n\nexport const setApplicantStatus = async (applicationStatus, applicantEmail) => {\n    return await patchRequest('/applicants/status', {\n        applicationStatus,\n        applicantEmail,\n    });\n}\n\nexport const setApplicantScores = async (newScores, applicantEmail) => {\n    return await patchRequest('/applicants/scores', {\n        newScores,\n        applicantEmail,\n    });\n}\n\nexport const getApplicantStats = async() => {\n    return await getRequest('/applicants/stats');\n}\n\nexport const getNumReviews = async() => {\n    return await getRequest('/admins/num_reviews');\n}\n\nexport const getReviewStats = async() => {\n    return await getRequest('/admins/review_stats');\n}","import React from \"react\";\nimport { Rate, Tooltip } from \"antd\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faQuestionCircle } from \"@fortawesome/free-regular-svg-icons\";\n\nimport \"./scoring-board.css\";\n\nconst CODING_EXPERIENCE_TIP = (\n  <p>\n    Learners: Base this on experience with Python or similar languages.\n    <br />\n    <br />\n    Competitors: Base this on their experience with any data science related\n    language (Python / R) and libraries (Pandas / Matplotlib)\n  </p>\n);\nconst DS_EXPERIENCE_TIP = (\n  <p>\n    Learners: We're mainly looking for interest in Data Science, but a little\n    bit of previous experience is helpful. Too much experience might mean that\n    they'd get bored.\n    <br />\n    <br />\n    Competitors: We're looking for a good amount of experience and previous work\n    in Data Science. Classes are good, work experience is great. We need to make\n    sure that competitors are good enough to work on our sponsors' datasets.\n  </p>\n);\nconst CULTURE_FIT_TIP = (\n  <p>\n    This is pretty subjective, but can be based off of their excitement to\n    attend the Datathon. This will be reflected off their responses to our\n    'Experience' and 'Expectation' questions.\n  </p>\n);\nconst IS_STEM_TIP = <p>Whether the applicant is a STEM major.</p>;\n\nconst MAX_SCORE = 3;\n\nconst DEFAULT_APPLICANT_SCORES = {\n  coding_exp: 0,\n  ds_exp: 0,\n  culture_fit: 0,\n  is_stem: 0\n};\n\nclass ScoringBoard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      scores:\n        props.scores == undefined ? DEFAULT_APPLICANT_SCORES : this.props.scores\n    };\n  }\n\n  componentWillReceiveProps(newProps) {\n    this.setState({\n      ...this.state,\n      scores:\n        newProps.scores == undefined\n          ? DEFAULT_APPLICANT_SCORES\n          : newProps.scores\n    });\n  }\n\n  changeApplicantScore(scoreType, score) {\n    let { scores } = this.state;\n    scores[scoreType] = score;\n    this.setState({\n      ...this.state,\n      scores\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"row justify-content-center selection-buttons-div\">\n        <span className=\"score-block\">\n          <h5 className=\"score-block-heading\">\n            Coding Experience:\n            <Tooltip title={CODING_EXPERIENCE_TIP}>\n              <FontAwesomeIcon\n                icon={faQuestionCircle}\n                className=\"score-block-tooltip\"\n              />\n            </Tooltip>\n          </h5>\n          <Rate\n            onChange={score => this.changeApplicantScore(\"coding_exp\", score)}\n            allowClear\n            count={MAX_SCORE}\n            value={this.state.scores[\"coding_exp\"]}\n          />\n        </span>\n        <span className=\"score-block\">\n          <h5 className=\"score-block-heading\">\n            Data Science Experience:\n            <Tooltip title={DS_EXPERIENCE_TIP}>\n              <FontAwesomeIcon\n                icon={faQuestionCircle}\n                className=\"score-block-tooltip\"\n              />\n            </Tooltip>\n          </h5>\n          <Rate\n            onChange={score => this.changeApplicantScore(\"ds_exp\", score)}\n            allowClear\n            count={MAX_SCORE}\n            value={this.state.scores[\"ds_exp\"]}\n          />\n        </span>\n        <span className=\"score-block\">\n          <h5 className=\"score-block-heading\">\n            Culture Fit:\n            <Tooltip title={CULTURE_FIT_TIP}>\n              <FontAwesomeIcon\n                icon={faQuestionCircle}\n                className=\"score-block-tooltip\"\n              />\n            </Tooltip>\n          </h5>\n          <Rate\n            onChange={score => this.changeApplicantScore(\"culture_fit\", score)}\n            allowClear\n            count={MAX_SCORE}\n            value={this.state.scores[\"culture_fit\"]}\n          />\n        </span>\n        <span className=\"score-block\">\n          <h5 className=\"score-block-heading\">\n            Is STEM:\n            <Tooltip title={IS_STEM_TIP}>\n              <FontAwesomeIcon\n                icon={faQuestionCircle}\n                className=\"score-block-tooltip\"\n              />\n            </Tooltip>\n          </h5>\n          <Rate\n            onChange={score => this.changeApplicantScore(\"is_stem\", score)}\n            allowClear\n            count={1}\n            value={this.state.scores[\"is_stem\"]}\n          />\n        </span>\n      </div>\n    );\n  }\n}\n\nexport default ScoringBoard;\n","import React from 'react';\nimport Navbar from '../navbar/navbar';\nimport { Redirect } from 'react-router-dom';\nimport { Spin, Button, message, Tooltip, Empty } from 'antd';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faQuestionCircle } from '@fortawesome/free-regular-svg-icons';\nimport { faArrowRight } from '@fortawesome/free-solid-svg-icons';\nimport ApplicantInfo from './applicant-info';\nimport { getRandomApplicant, setApplicantScores, getNumReviews, getReviewStats } from './selection-helper';\nimport ScoringBoard from './scoring-board/scoring-board';\n\nimport './selection.css';\n\nclass SelectionPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        let applicantData = undefined\n        if (this.props.location.state) {\n            applicantData = this.props.location.state.applicantData\n        }\n        this.state = {\n            authorized: true,\n            applicantData: applicantData,\n            applicantScores: (applicantData == undefined) ? undefined : applicantData.score,\n            totalReviewed: 0,\n            totalAssigned: 0,\n        }\n\n        this.getApplicantInfo = this.getApplicantInfo.bind(this);\n        this.submitScores = this.submitScores.bind(this);\n        this.getFullReviewedStats = this.getFullReviewedStats.bind(this);\n\n        this.scoringBoard = React.createRef();\n    };\n\n    getApplicantInfo() {\n        this.setState({\n            ...this.state,\n            authorized: true,\n            applicantData: undefined,\n            applicantScores: undefined,\n        })\n        this.getReviewedStatistics();\n        getRandomApplicant().then((applicantResponse) => {\n            let authorized = true;\n            let applicantData = undefined;\n            if (applicantResponse.status === 200) {\n                applicantData = applicantResponse.data.applicant;\n            } else if (applicantResponse.status === 401) {\n                authorized = false;\n            } else if (applicantResponse.status === 404) {\n                applicantData = null; // This means there was no data but a successful request\n            }\n            this.setState({\n                ...this.state,\n                authorized,\n                applicantData,\n                applicantScores: (applicantData === undefined || applicantData === null) ? undefined : applicantData.score,\n            })\n        })\n    };\n\n    showApplicantInfo() {\n        if (this.state.authorized) {\n            if (this.state.applicantData === null) return <div style={{margin: '20vh auto 20vh auto'}}><Empty/></div>;\n            else if (this.state.applicantData !== undefined) return <ApplicantInfo applicantInfo={this.state.applicantData} />;\n            else return <div><Spin size=\"large\" id=\"application-info-loading\" /></div>\n        } else {\n            message.error('Your access token expired. Please log in again.', 1.5);\n            return <Redirect to='/' />\n        }\n    };\n\n    async componentDidMount() {\n        if (this.state.applicantData === undefined) await this.getApplicantInfo();\n    };\n\n    getReviewedStatistics() {\n        getNumReviews().then((response) => {\n            if (response.status === 401) {\n                this.setState({\n                    ...this.state,\n                    authorized: false,\n                    applicantData: undefined,\n                })\n            } else {\n                this.setState({\n                    ...this.state,\n                    totalAssigned: response.data.curReviewerStats.totalAssigned,\n                    totalReviewed: response.data.curReviewerStats.totalReviewed,\n                    reviewStats: response.data.reviewStats,\n                });\n            }\n        });\n    };\n\n    submitScores() {\n        const applicantScores = this.scoringBoard.current.state.scores;\n        setApplicantScores(applicantScores, this.state.applicantData.email)\n            .then((response) => {\n                if (response.status === 401) {\n                    this.setState({\n                        ...this.state,\n                        authorized: false,\n                        applicantData: undefined,\n                    })\n                } else if (response.status === 200) {\n                    message.success('Your scores for the applicant were submitted successfully!', 1.5);\n                    this.setState({\n                        ...this.state,\n                        authorized: true,\n                        applicantData: response.data.applicant,\n                        applicantScores: response.data.applicant.score,\n                    });\n                    this.getReviewedStatistics();\n                } else if (response.status === 406) { // Not allowed, applicant isn't assigned to the reviewer\n                    message.warning('This applicant is not assigned to you, thus you cannot submit scores for them. Best to move on to the next applicant.')\n                    this.getApplicantInfo();\n                } else {\n                    message.error(`Something went wrong, here's all we know:\\n'${response.message}'`);\n                }\n            });\n    };\n\n    // Gets review statistics for all reviewers\n    getFullReviewedStats() {\n        if (this.state.reviewStats === undefined) {\n            return '';\n        }\n        // Map each review stat to a formatted line.\n        let reviews = Object.keys(this.state.reviewStats).map((reviewer) =>\n            <p key={reviewer}>{reviewer}: {this.state.reviewStats[reviewer].totalReviewed} / {this.state.reviewStats[reviewer].totalAssigned}</p>);\n        reviews.push(<p key='total'>\n            Total: {Object.values(this.state.reviewStats).reduce((total, review) => total + review.totalReviewed, 0)} / {Object.values(this.state.reviewStats).reduce((total, review) => total + review.totalAssigned, 0)}\n        </p>)\n        return reviews\n    };\n\n    render() {\n        return (\n            <div className=\"container-fluid\">\n                <Navbar />\n                {this.showApplicantInfo()}\n                <ScoringBoard ref={this.scoringBoard} scores={this.state.applicantScores} />\n                <div className=\"row justify-content-center next-button-div\">\n                    <Button className=\"selection-button mx-4\" style={{\n                        backgroundColor: \"#04BEA8\",\n                    }} onClick={this.submitScores}>\n                        Submit Scores\n                    </Button>\n                    <h5 className=\"mt-1\">\n                        Reviewed: {this.state.totalReviewed} / {this.state.totalAssigned}\n                        <Tooltip title={this.getFullReviewedStats()}>\n                            <FontAwesomeIcon\n                                icon={faQuestionCircle}\n                                className=\"score-block-tooltip\"\n                            />\n                        </Tooltip>\n                    </h5>\n                </div>\n                <div className=\"row justify-content-center next-button-div\">\n                    <Button className=\"selection-button\" style={{\n                        backgroundColor: \"#663399\",\n                    }} onClick={this.getApplicantInfo}>\n                        Next Applicant\n                            <FontAwesomeIcon icon={faArrowRight}\n                            style={{\n                                marginLeft: '10px'\n                            }}\n                        />\n                    </Button>\n                </div>\n            </div>\n        )\n    };\n}\n\nexport default SelectionPage;","import axios from 'axios';\nimport { serverCredentials } from '../../credentials';\n\nconst serverEndpoint = serverCredentials.endpoint;\n\nexport const getApplicantData = async (email) => {\n    try {\n        const response = await axios.get(serverEndpoint+'/applicants?email='+encodeURIComponent(email), {withCredentials: true});\n        return response;\n    } catch (err) {\n        return err.response;\n    }\n}","import React from 'react';\nimport Navbar from '../navbar/navbar';\nimport { Redirect } from 'react-router-dom';\nimport {Input, List, Badge, message} from 'antd';\nimport axios from 'axios';\nimport { serverCredentials } from '../../credentials';\nimport { getApplicantData } from './search-helper';\n\nimport './search.css';\n\nconst serverEndpoint = serverCredentials.endpoint;\n\nconst {Search} = Input;\n\nconst getApplicationStatusBadge = (status) => {\n    const applicationColorMap = {\n        Pending: \"warning\",\n        Accepted: \"success\",\n        Rejected: \"error\",\n        Waitlisted: \"processing\",\n    }\n    return <Badge className=\"application-status-badge\" status={applicationColorMap[status]} text={status}/>;\n}\n\nclass SearchPage extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            searchResults: [],\n            clickedApplicant: undefined,\n            authorized: true,\n        }\n\n        this.searchClick = this.searchClick.bind(this);\n    }\n\n    async searchClick(query) {\n        try {\n            const searchResponse = await axios.get(serverEndpoint+'/applicants/search', {\n                params: { query: query },\n                withCredentials: true\n            });\n            this.setState({\n                ...this.state,\n                searchResults: searchResponse.data\n            });\n        } catch (err) {\n            if (err.response.status === 401) {\n                this.setState({\n                    ...this.state,\n                    authorized: false,\n                })\n            }\n            return [];\n        }\n    }\n\n    async redirectToApplicantSelection(email) {\n        const response = await getApplicantData(email);\n        if (response.status === 401) {\n            this.setState({\n                ...this.state,\n                authorized: false,\n            })\n        } else if (response.status === 200) {\n            this.setState({\n                ...this.state,\n                clickedApplicant: response.data.applicant,\n            })\n        } else if (response.status === 406) {\n            message.warning('This applicant is not assigned to you, accessing their information is forbidden.', 2);\n        } else {\n            message.error('Something went wrong. A page reload might fix it', 2);\n        }\n    }\n\n    redirectToApplicant() {\n        if (this.state.clickedApplicant !== undefined) {\n            return  <Redirect\n                to={{\n                    pathname: \"/selection\",\n                    state: { applicantData: this.state.clickedApplicant }\n                }}\n            />\n        }\n    }\n\n    displaySearchResults(data) {\n        return (\n            <div className='search-results-div'>\n                <List\n                    itemLayout=\"horizontal\"\n                    dataSource={data}\n                    renderItem={item => (\n                        <List.Item\n                            onClick={() => this.redirectToApplicantSelection(item.email)}\n                            className=\"search-result\"\n                        >\n                            <List.Item.Meta\n                                title={<p>{item.firstName + ' ' + item.lastName}</p>}\n                                description= {item.email + ' | ' + item.track + ' | ' + item.classification}\n                            />\n                            <div>\n                                {getApplicationStatusBadge(item.applicationStatus)}\n                            </div>\n                        </List.Item>\n                    )}\n                />\n            </div>\n        )\n    }\n\n    searchBar() {\n        return (\n            <div>\n                <div className=\"search-bar-div\">\n                    <Search\n                        placeholder=\"Looking for something?\"\n                        enterButton\n                        size=\"large\"\n                        onSearch={value => this.searchClick(value)}\n                        id=\"search-bar\"\n                    />\n                </div>\n            </div>\n        )\n    }\n\n    authorizedCheck() {\n        if (!this.state.authorized) {\n            message.error('Your access token expired. Please log in again.', 1.5);\n            return <Redirect to='/'/>\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                {this.authorizedCheck()}\n                <Navbar/>\n                {this.searchBar()}\n                {this.displaySearchResults(this.state.searchResults)}\n                {this.redirectToApplicant()}\n            </div>\n        )\n    }\n}\n\nexport default SearchPage;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport LoginPage from './routes/login/login';\nimport SelectionPage from './routes/selection/selection';\nimport SearchPage from './routes/search/search';\nimport * as serviceWorker from './serviceWorker';\nimport { Route, BrowserRouter as Router } from 'react-router-dom';\n\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst routing = (\n    <Router>\n      <div>\n        <Route exact path=\"/\" component={LoginPage} />\n        <Route path=\"/selection\" component={SelectionPage} />\n        <Route path=\"/search\" component={SearchPage} />\n      </div>\n    </Router>\n  )\n\nReactDOM.render(routing, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = {\n    serverCredentials: {\n        'endpoint': 'https://localhost:8882',\n    }\n}","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 94;"],"sourceRoot":""}