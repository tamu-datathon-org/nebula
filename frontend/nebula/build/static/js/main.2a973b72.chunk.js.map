{"version":3,"sources":["../node_modules/pdfjs-dist/build sync","config.js","img/camera.svg","components/login/login-helper.js","components/login/Login.js","components/navbar/Navbar.js","components/attendance/resume-modal/resume-modal.js","components/attendance/participant-info/ParticipantInfo.js","components/attendance/email-input/EmailInput.js","components/attendance/attendance-helper.js","components/attendance/AttendancePage.js","App.js","serviceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","serverCredentials","serverEndpoint","endpoint","loginAdmin","adminKey","a","axios","post","withCredentials","response","status","authorized","data","LoginPage","props","state","loggedIn","handleLogin","bind","loginKey","this","loginInputObj","value","toLowerCase","adminData","message","success","firstName","setState","error","to","className","redirectOnLogin","size","placeholder","ref","inputObj","onClick","React","Component","Navbar","powerOff","reauthenticate","Cookie","remove","redirectIfPowerOff","type","style","fontSize","pdfjs","GlobalWorkerOptions","workerSrc","version","applicationStatusColorMap","ParticipantInfo","render","info","applicantInfo","applicant","Content","Header","lastName","Meta","applicationStatus","color","getTrackInfo","track","Description","university","major","undefined","text","getDietInfo","extra","Button","basic","signInStatus","signInType","loading","changeSignInStatus","email","qrcode","window","getQrCodeDataFromFile","fileObj","Promise","reader","FileReader","onload","callback","res","decode","result","readAsDataURL","EmailInput","imageFiles","length","qrCode","processEmailInput","accept","capture","onChange","processImage","target","files","emailInput","errorHandler","err","getParticipantInfo","applicantEmail","get","encodeURIComponent","setParticipantSignInStatus","patch","SignInTypeSelector","defaultValue","width","changeSignInType","OptGroup","label","Option","AttendancePage","newStatus","warn","authorizedCheck","getApplicant","App","exact","path","component","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2a973b72.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 117;","module.exports = {\n    serverCredentials: {\n        'endpoint': 'https://nebula.tamudatathon.com:8882',\n    }\n}","module.exports = __webpack_public_path__ + \"static/media/camera.2dff6c4e.svg\";","import axios from 'axios';\nimport { serverCredentials } from '../../config';\n\nconst serverEndpoint = serverCredentials.endpoint;\n\nexport const loginAdmin = async (adminKey) => {\n    try {\n        const response = await axios.post(serverEndpoint+'/admins', {\n            adminKey: adminKey,\n        }, {\n            withCredentials: true,\n        });\n        if (response.status === 200) {\n            return {\n                authorized: true,\n                ...response.data\n            };\n        }\n    } catch (err) {\n        return { authorized: false };\n    }\n    return { authorized: false };\n}\n\nexport const logoutAdmin = async () => {\n    await axios.delete(serverEndpoint+'/admins');\n};","import React from 'react';\nimport { Input, Button, message } from 'antd';\nimport { loginAdmin } from './login-helper.js';\nimport { Redirect } from 'react-router-dom';\n\nimport './login.css';\n\nclass LoginPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loggedIn: false,\n        };\n\n        this.handleLogin = this.handleLogin.bind(this);\n    }\n\n    async handleLogin() {\n        const loginKey = this.loginInputObj.state.value.toLowerCase();\n        const adminData = await loginAdmin(loginKey);\n        if (adminData.authorized) {\n            message.success(`Hey ${adminData.firstName}, welcome to Nebula.`, 2)\n            this.setState({\n                loggedIn: true,\n            });\n        } else {\n            message.error(\"The credentials you provided are incorrect.\", 2)\n        }\n    }\n\n    redirectOnLogin() {\n        if (this.state.loggedIn) {\n            return <Redirect to='attendance'/>\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"container-fluid\">\n                {this.redirectOnLogin()}\n                <h1 id=\"mainLogo\" className=\"text-center\">Nebula</h1>\n                <div className=\"row justify-content-around\">\n                    <div className=\"\" id=\"loginForm\">\n                        <Input size=\"large\" placeholder=\"Enter your key\" id=\"loginInput\" \n                            ref={(inputObj) => this.loginInputObj = inputObj}/>\n                        <Button id=\"loginBtn\" onClick={this.handleLogin}>Login</Button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default LoginPage;","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Icon, message } from 'antd';\nimport Cookie from 'js-cookie';\nimport { logoutAdmin } from '../login/login-helper';\n\nimport './navbar.css';\n\nclass Navbar extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            powerOff: false,\n        }\n\n        this.powerOff = this.powerOff.bind(this);\n        this.reauthenticate = this.reauthenticate.bind(this);\n    }\n\n    async powerOff() {\n        message.success(`Logging out!`, 2);\n        //logoutAdmin(); ---- Don't logout because we're using the same token for all logins\n        Cookie.remove('td_token');\n        this.setState({\n            powerOff: true,\n        })\n    }\n\n    redirectIfPowerOff() {\n        if (this.state.powerOff) return <Redirect to='/'/>\n    }\n\n    reauthenticate() {\n        message.error('Your access token expired. Please log in again.', 1.5);\n        this.setState({\n            powerOff: true\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"container-fluid\">\n                {this.redirectIfPowerOff()}\n                <span id=\"brand-div\">\n                    <p className=\"brand text-center\">Nebula</p>\n                </span>\n                <span className=\"navbar-poweroff\">\n                    <Icon type=\"export\" className=\"navbar-icon\" onClick={this.powerOff} style={{\n                        fontSize: '20px',\n                    }}/>\n                </span>\n            </div>\n        )\n    }\n}\n\nexport default Navbar;","import React from 'react';\nimport { Document, Page, pdfjs } from 'react-pdf';\nimport { Modal, Icon } from 'antd';\n\nimport './resume-modal.css';\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\nclass ResumeModalLink extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            visible: false,\n            numPages: null,\n            pageNumber: 1,\n            fileObj: {\n                url: this.props.resumeUrl\n            }\n        }\n\n        this.showModal = this.showModal.bind(this);\n        this.closeModal = this.closeModal.bind(this);\n        this.onDocumentLoadSuccess = this.onDocumentLoadSuccess.bind(this);\n        this.prevPage = this.prevPage.bind(this);\n        this.nextPage = this.nextPage.bind(this);\n    }\n\n    closeModal() {\n        this.setState({\n            visible: false,\n        });\n    }\n \n    onDocumentLoadSuccess = ({ numPages }) => {\n        this.setState({numPages})\n    }\n\n    showModal(e) {\n        e.preventDefault();\n        this.setState({\n            visible: true,\n        });\n    }\n\n    nextPage() {\n        let pageNumber = this.state.pageNumber % this.state.numPages + 1;\n        pageNumber = (pageNumber > 0) ? pageNumber : 1;\n        this.setState({pageNumber});\n    }\n\n    prevPage() {\n        let pageNumber = (this.state.pageNumber - 1) % this.state.numPages;\n        pageNumber = (pageNumber > 0) ? pageNumber : 1;\n        this.setState({pageNumber});\n    }\n    \n    render() {\n        const { numPages, pageNumber } = this.state;\n        return (\n            <span>\n                <a href={this.props.resumeUrl} onClick={this.showModal}>Here</a>\n                <Modal\n                    visible={this.state.visible}\n                    title={`${this.props.applicantFirstName}'s Resume`}\n                    onCancel={this.closeModal}\n                    footer={null}\n                    width='650px'\n                >\n                    <Document\n                        file= {this.state.fileObj}\n                        style = {{\n                            margin: 'auto',\n                        }}\n                        error={\n                            <p>\n                                Seems like the resume isn't a pdf. Please download it <a href={this.props.resumeUrl}>here</a>.\n                            </p>\n                        }\n                        loading='Loading resume...'\n                        onLoadSuccess={this.onDocumentLoadSuccess}\n                    >\n                        <Page pageNumber={this.state.pageNumber} width={600}/>\n                    </Document>\n                    <div \n                        style={{\n                            marginLeft: '270px',\n                            display: (numPages != null) ? 'inline-block' : 'none'\n                        }}\n                    >\n                    <p>\n                        Page {pageNumber || (numPages ? 1 : '--')} of {numPages || '--'}\n                    </p>\n                    <Icon \n                        type=\"left\" \n                        onClick={this.prevPage}\n                        className='pageBtn'\n                    />\n                    <Icon \n                        type=\"right\" \n                        onClick={this.nextPage}\n                        className='pageBtn'\n                        style={{\n                            marginLeft: '45px'\n                        }}\n                    />\n                    </div>\n                </Modal>\n            </span>\n        );\n    }\n}\n\nexport default ResumeModalLink;","import React from 'react';\nimport { Tag, Badge } from 'antd';\nimport { Button, Card as SemanticCard } from 'semantic-ui-react';\nimport ResumeModalLink from '../resume-modal/resume-modal';\n\nimport './participant-info.css';\n\nconst applicationStatusColorMap = {\n    \"Not Coming (RSVP'ed No)\": \"#F79F1F\",\n    \"Rejected\": \"#ED4C67\",\n    \"Accepted (Didn't RSVP)\": \"#2db7f5\",\n    \"RSVP'ed\": \"#009432\"\n}\n\nconst getTrackInfo = (info) => {\n    if (info === \"Learner\") {\n        return <Tag color=\"#f0932b\">Learner</Tag>\n    } else {\n        return <Tag color=\"#4834d4\">Competitor</Tag>\n    }\n}\n\nconst getDietInfo = (info) => {\n    if (info === \"\" || info === undefined) {\n        return <Badge status=\"error\" text=\"No Data\" className=\"ml-3\"/>\n    }\n    return info\n}\n\nconst getApplicationStatusInfo = (info) => {\n    return <Tag color={applicationStatusColorMap[info]}>{info}</Tag>\n}\n\nclass ParticipantInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            applicant: props.applicant,\n            signInType: props.signInType,\n            loading: false,\n        }\n\n        this.changeSignInStatus = this.changeSignInStatus.bind(this);\n    }\n\n    componentWillReceiveProps(props) {\n        this.setState({\n            applicant: props.applicant,\n            signInType: props.signInType,\n            loading: false,\n        })\n    }\n\n    changeSignInStatus(email, status, type) {\n        if (status == this.state.applicant.signInStatus[type]) {\n            return;\n        }\n        this.props.changeSignInStatus(email, status, type)\n        this.setState({loading: true})\n    }\n\n    render = () => {\n        const applicantInfo = this.state.applicant;\n        return (\n            <div className=\"row justify-content-center my-5\">\n                <SemanticCard>\n                    <SemanticCard.Content>\n                        <SemanticCard.Header>{`${applicantInfo.firstName} ${applicantInfo.lastName}`}</SemanticCard.Header>\n                        <SemanticCard.Meta className=\"my-2\">{getApplicationStatusInfo(applicantInfo.applicationStatus)} {getTrackInfo(applicantInfo.track)}</SemanticCard.Meta>\n                        <hr/>\n                        <SemanticCard.Description className=\"mt-4\">\n                            <p className=\"participant-info-li my-3\">{applicantInfo.university}</p>\n                            <p className=\"participant-info-li my-3\">{applicantInfo.major}</p>\n                            {<p className=\"participant-info-li my-3\"><b>Dietary Restriction:</b> {getDietInfo()}</p>}\n                        </SemanticCard.Description>\n                    </SemanticCard.Content>\n                    <SemanticCard.Content extra>\n                        <div className='ui'>\n                        <Button \n                            basic={applicantInfo.signInStatus[this.state.signInType]} \n                            color='green' className=\"w-100\" \n                            loading={this.state.loading}\n                            onClick={() => this.changeSignInStatus(applicantInfo.email, true, this.state.signInType)}\n                        >\n                            {(applicantInfo.signInStatus[this.state.signInType]) ? 'Checked in!' : 'Check In'}\n                        </Button>\n                        </div>\n                    </SemanticCard.Content>\n                </SemanticCard>\n            </div>\n        );\n    }\n};\n\nexport default ParticipantInfo;","import React from 'react';\nimport { Button, message, Input, Icon } from 'antd';\nimport CameraImage from '../../../img/camera.svg';\n\nimport \"./email-input.css\";\n\nvar qrcode = window.qrcode;\n\nconst getQrCodeDataFromFile = async (fileObj) => {\n    return new Promise((resolve) => {\n        var reader = new FileReader();\n        reader.onload = (e) => {\n            qrcode.callback = function(res) {\n                if(res instanceof Error) {\n                  message.error(\"Couldn't read the QR Code.\")\n                  resolve(undefined)\n                } else {\n                    resolve(res);\n                }\n            }\n            qrcode.decode(reader.result)\n        }\n        reader.readAsDataURL(fileObj);\n    });\n}\n\nclass EmailInput extends React.Component {\n\n    async processImage(imageFiles) {\n        if (imageFiles.length <= 0) {\n            return;\n        }\n        \n        const qrCode = await getQrCodeDataFromFile(imageFiles[0]);\n        if (qrCode !== undefined) this.props.processEmailInput(qrCode);\n    }\n\n    render() {\n        return (\n        <div className=\"row justify-content-center mt-4\">\n            <div className=\"col-lg-5 col-md-4 col-sm-12 text-center\">\n                <label\n                    className=\"qr-code-input\"\n                >\n                    <input type=\"file\" accept=\"image/*\" capture=\"environment\" onChange={(e) => this.processImage(e.target.files)}/>\n                    <Icon type=\"qrcode\" className=\"qr-code-scan-btn\" style={{ fontSize: '80px'}}/>\n                </label>\n            </div>\n            <h3 className=\"col-lg-1 col-md-1 col-sm-12 my-4 text-center\">\n                Or\n            </h3>\n            <div className=\"col-lg-5 col-md-6 col-sm-12 text-center\">\n                <Input size=\"large\" placeholder=\"Enter the participant's email\" id=\"email-input\" \n                        ref={(inputObj) => this.emailInput = inputObj}/>\n                <Button id=\"email-input-btn\" className=\"mx-3 my-4\" onClick={() => this.props.processEmailInput(this.emailInput.state.value)}>Get Info</Button>\n            </div>\n        </div>\n        );\n    }\n};\n\nexport default EmailInput;","import React from 'react';\nimport axios from 'axios';\nimport { serverCredentials } from '../../config';\nimport { Select, message } from 'antd';\n\nconst serverEndpoint = serverCredentials.endpoint;\n\nexport const DEFAULT_SIGN_IN_TYPE = \"check_in_19\";\n\nconst errorHandler = (err) => {\n    if (err.response.status === 404) {\n        return {\n            authorized: true,\n            applicant: undefined,\n        } \n    } else if (err.response.status === 500) {\n        message.error('Something went wrong, can\\'t really say what it is.');\n        return { authorized: false };\n    }\n    return { authorized: false, applicant: null };\n}\n\nexport const getParticipantInfo = async (applicantEmail) => {\n    try {\n        const response = await axios.get(serverEndpoint+'/applicants?email='+encodeURIComponent(applicantEmail), {withCredentials: true});\n        if (response.status === 200) {\n            return {\n                authorized: true,\n                ...response.data\n            };\n        } \n    } catch (err) { \n        return errorHandler(err);\n    }\n    return { authorized: false };\n}\n\nexport const setParticipantSignInStatus = async (applicantEmail, signInStatus, signInType) => {\n    try {\n        const response = await axios.patch(serverEndpoint+'/applicants/signin', {\n            applicantEmail,\n            signInStatus,\n            signInType,\n        }, {withCredentials: true});\n        if (response.status === 200) {\n            return {\n                authorized: true,\n                ...response.data\n            };\n        } \n    } catch (err) { \n        return errorHandler(err);\n    }\n    return { authorized: false };\n}\n\nexport const SignInTypeSelector = (props) => (\n    <div className=\"row justify-content-center my-4\">\n        <Select \n            defaultValue={DEFAULT_SIGN_IN_TYPE} size=\"large\" style={{width: 300}}\n            onChange={props.changeSignInType}\n        >\n            <Select.OptGroup label=\"Event Check In/Out\">\n                <Select.Option value=\"check_in_19\">Check In (October 19th)</Select.Option>\n            </Select.OptGroup>\n            <Select.OptGroup label=\"Meals\">\n                <Select.Option value=\"lunch_19\">Lunch (October 19th)</Select.Option>\n                <Select.Option value=\"dinner_19\">Dinner (October 19th)</Select.Option>\n                <Select.Option value=\"breakfast_20\">Breakfast (October 20th)</Select.Option>\n                <Select.Option value=\"lunch_20\">Lunch (October 20th)</Select.Option>\n            </Select.OptGroup>\n            <Select.OptGroup label=\"Learner Lessons\">\n                <Select.Option value=\"lesson_1\">Learner Track Lesson 1</Select.Option>\n                <Select.Option value=\"lesson_2\">Learner Track Lesson 2</Select.Option>\n                <Select.Option value=\"lesson_3\">Learner Track Lesson 3</Select.Option>\n            </Select.OptGroup>\n            <Select.OptGroup label=\"Company Workshops\">\n                <Select.Option value=\"stats_workshop\">Statistics Department Workshop</Select.Option>\n                <Select.Option value=\"cbre_workshop\">CBRE Workshop</Select.Option>\n                <Select.Option value=\"usaa_workshop\">USAA Workshop</Select.Option>\n                <Select.Option value=\"math_workshop_1\">Math Department Workshop</Select.Option>\n                <Select.Option value=\"facebook_side_event\">Facebook Oculus Side Event</Select.Option>\n                <Select.Option value=\"conocophillips_workshop\">ConocoPhillips Workshop</Select.Option>\n                <Select.Option value=\"tti_workshop\">TTI Workshop</Select.Option>\n                <Select.Option value=\"walmart_workshop\">Walmart Workshop</Select.Option>\n                <Select.Option value=\"mlh_cup_stacking\">MLH Cup Stacking</Select.Option>\n                <Select.Option value=\"shell_workshop\">Shell Workshop</Select.Option>\n                <Select.Option value=\"facebook_workshop\">Facebook Workshop</Select.Option>\n                <Select.Option value=\"goldmansachs_workshop\">Goldman Sachs Workshop</Select.Option>\n                <Select.Option value=\"zumba_workshop\">Zumba Workshop</Select.Option>\n            </Select.OptGroup>\n            <Select.OptGroup label=\"Company Tables\">\n                <Select.Option value=\"cbre_table\">CBRE Table</Select.Option>\n                <Select.Option value=\"usaa_table\">USAA Table</Select.Option>\n                <Select.Option value=\"facebook_table\">Facebook Table</Select.Option>\n                <Select.Option value=\"conocophillips_table\">ConocoPhillips Table</Select.Option>\n                <Select.Option value=\"tti_table\">TTI Table</Select.Option>\n                <Select.Option value=\"walmart_table\">Walmart Technology Table</Select.Option>\n                <Select.Option value=\"shell_table\">Shell Table</Select.Option>\n                <Select.Option value=\"goldmansachs_table\">Goldman Sachs Table</Select.Option>\n            </Select.OptGroup>\n        </Select>\n    </div>\n);\n","import React from 'react';\nimport Navbar from '../navbar/Navbar';\nimport ParticipantInfo from './participant-info/ParticipantInfo';\nimport EmailInput from './email-input/EmailInput';\nimport { Redirect } from 'react-router-dom';\nimport { message, Empty, Icon } from 'antd';\nimport { getParticipantInfo, SignInTypeSelector, setParticipantSignInStatus, DEFAULT_SIGN_IN_TYPE } from './attendance-helper';\n\nimport './attendance-page.css';\n\nclass AttendancePage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorized: true,\n            applicant: undefined,\n            signInType: DEFAULT_SIGN_IN_TYPE,\n        };\n\n        this.processEmailInput = this.processEmailInput.bind(this);\n        this.authorizedCheck = this.authorizedCheck.bind(this);\n        this.getParticipantInfo = this.getParticipantInfo.bind(this);\n        this.changeSignInStatus = this.changeSignInStatus.bind(this);\n        this.getApplicant = this.getApplicant.bind(this);\n      }\n\n    async processEmailInput(email) {\n        if (email === undefined || email === null || email === \"\") return;\n        this.setState({applicant: null});\n        this.getApplicant(email.toLowerCase());\n    }\n\n    async getApplicant(email) {\n        const {authorized, applicant} = await getParticipantInfo(email);\n        if (applicant === undefined) {\n            message.warn(`No participant exists with the email: ${email}`)\n        }\n        return this.setState({ applicant, authorized });\n    }\n\n    authorizedCheck() {\n        if (!this.state.authorized) {\n            message.error(\"Your access token expired. Please log-in to Nebula again!\");\n            return <Redirect to='/'/>;\n        }\n    }\n\n    getParticipantInfo() {\n        if (this.state.applicant === undefined) {\n            return <Empty />\n        } else if (this.state.applicant === null) {\n            return <div className='row justify-content-center my-5'><Icon type=\"loading\" style={{fontSize: '40px', color: '#666666'}}/></div>; \n        }\n        return <ParticipantInfo applicant={this.state.applicant} signInType={this.state.signInType} changeSignInStatus={this.changeSignInStatus}/>\n    }\n\n    changeSignInStatus = async (email, newStatus, signInType) => {\n        const {authorized, applicant} = await setParticipantSignInStatus(email, newStatus, signInType);\n        if (!authorized) {\n            return this.setState({\n                ...this.state,\n                authorized: false,\n                applicant: undefined,\n            });\n        } else if (applicant === undefined) {\n            return message.warn(`No participant exists with the email: ${email}`)\n        } else {\n            message.success(`${this.state.applicant.firstName} was successfully ${(newStatus) ? 'signed in' : 'signed out'}!`)\n        }\n        return this.setState({\n            ...this.state,\n            applicant,\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"container-fluid\">\n                {this.authorizedCheck()}\n                <Navbar />\n                <div className=\"main-div\">\n                    <EmailInput processEmailInput={this.processEmailInput}/>\n                    <SignInTypeSelector changeSignInType={(signInType) => this.setState({...this.state, signInType})}/>\n                    {this.getParticipantInfo()}\n                </div>\n            </div>\n        )\n    };\n}\n\nexport default AttendancePage;","import React from 'react';\nimport LoginPage from './components/login/Login';\nimport AttendancePage from './components/attendance/AttendancePage';\nimport { Route, BrowserRouter as Router } from 'react-router-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\nclass App extends React.Component {\n  render() {\n    return (  \n    <Router>\n      <Route exact path=\"/\" component={LoginPage} />\n      <Route exact path=\"/attendance\" component={AttendancePage} />\n    </Router>\n    );\n  }\n};\n  \n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}